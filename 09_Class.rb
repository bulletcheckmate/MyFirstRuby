# 【オブジェクトについての復習】
# 1)Rubyでは全ての値がオブジェクトである
# 2)オブジェクトは、クラスから作ることができる
# 3)オブジェクトは、何らかのクラスに所属している

# オブジェクトが何らかのクラスに所属していることを強調したい場合は「インスタンス」と言う用語が使われることもある

# クラス = データ（＝インスタンス変数）と処理（メソッド）をまとめたもの
# インスタンス変数 = クラス内で定義された変数のこと。普通の変数はクラスの外にある
# クラスにインスタンス変数を作ることを「インスタンス変数を定義する」と言う
# クラスの外に書くメソッドのことを「関数的メソッド」と言い、クラス内に書いたメソッドのことを「インスタンスメソッド」と言う

class STUDENT # クラス名を入れる
    def avg() # 数学と英語の点数の平均を計算するメソッドを定義
        p (80 + 70) / 2
    end
end

# クラスはクラスからオブジェクトを作ってから使用が可能になる
# オブジェクトを作ることを「オブジェクト化／オブジェクト生成／インスタンス化」などと言う

a001 = STUDENT.new # オブジェクト化 # aという学級の出席番号１番の人のデータ
a001.avg

class Student
    def avg(math, english)
        p (math + english) / 2
    end
end

b001 = Student.new
b002 = Student.new
b003 = Student.new
b001.avg(80,70)
b002.avg(60,92)
b003.avg(100,10)

# クラスはデータと処理をまとめたもの。つまりクラスはデータを持てる

class Pupils
    def initialize(name) # initializeメソッド = オブジェクトを生成すると自動的に実行される特殊なメソッド
        @name = name # インスタンス変数
    end

    # クラス内に記述する「インスタンスメソッド」
    def avg(math, english) # インスタンス変数はオブジェクトのメソッドからのみ参照できる
        p @name,(math + english)
    end
end

c001 = Pupils.new("Sato") # initializeメソッドに値を渡す
c001.avg(30,70)

# クラスは一度定義してしまえば、後からいくらでも再利用可能
